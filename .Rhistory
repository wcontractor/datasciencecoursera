barplot(HartfordTemps$Max_TemperatureF)
barplot(HartfordTemps$Mean_TemperatureF)
lines(HartfordTemps$Mean_TemperatureF)
lines(HartfordTemps$Mean_TemperatureF)
lines(HartfordTemps$Mean_TemperatureF, add="True")
lines(HartfordTemps$Mean_TemperatureF, add=T)
plot(HartfordTemps$Mean_TemperatureF)
data
data(zipcodes)
data(zipcode)
packages(zipcodes)
install.packages(zipcodes)
install.packages(zipcode)
install.packages("zipcode")
library(zipcode)
data(zipcode)
zipcode
names(zipcodes)
names(zipcode)
install.packages("maps")
library(maps)
install.packages("mapproj")
library(mapproj)
CT = subset(zipcode$state == 'CT')
CT = subset(zipcode$state == 'CT',)
CT = subset(,zipcode$state == 'CT')
CT = zipcode$state == "CT"
head(CT, 10)
CT
rm(CT)
head(zipcodes, 10)
data(zipcodes)
data(zipcode)
head(zipcode, 10)
zipcode$state == "CT"
zipcode$state = "CT"
zipcode$state = "CT"
subset(zipcode)
head(subset(zipcode), 100)
zipcode
CT <- zipcode$state = "CT"
CT <- zipcode[zipcode$state = "CT",]
CT <- zipcode[,zipcode$state = "CT"]
CT <- zipcode[,zipcode$state = "CT"]
zipcode[zipcode$state = 'CT',]
zipcode[zipcode$state = "CT",]
g = ggplot(data=zipcode) + geom_point(aes(x=longitude, y=latitude, colour=region))
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
g = ggplot(data=zipcode) + geom_point(aes(x=longitude, y=latitude, colour=region))
zipcode$region = substr(zipcode$zip, 1, 1)
g = ggplot(data=zipcode) + geom_point(aes(x=longitude, y=latitude, colour=region))
g = g + theme_bw() + scale_x_continuous(limits = c(-125,-66), breaks = NA)
g = g + scale_y_continuous(limits = c(25,50), breaks = NA)
choroplethr_acs(tableId="B19301", lod="zip")
library(devtools)
install.packages(devtools)
install.packages("devtools")
library(devtools)
install_github("choroplethr", "trulia")
library(choroplethr)
choroplethr_acs(tableId="B19301", lod="state")
choroplethr_acs(tableId="B19301", lod="county")
choroplethr_acs(tableId="B19301")
?choroplethr_acs
choroplethr_acs(tableId="B19301", "state")
area.map(m, c("North Dakota", "South Dakota"))
area.map(m, c("North Dakota", "South Dakota"))
m = map("state", fill=TRUE, plot=FALSE)
area.map(m)
map(database = "world", regions = ".", exact = FALSE, boundary = TRUE,
interior = TRUE, projection = "", parameters = NULL, orientation = NULL,
fill = FALSE, col = 1, plot = TRUE, add = FALSE, namesonly = FALSE,
xlim = NULL, ylim = NULL, wrap = FALSE, resolution = if(plot) 1 else 0,
type = "l", bg = par("bg"), mar = c(4.1, 4.1, par("mar")[3], 0.1),
myborder = 0.01, ...)
map('italy', fill = TRUE, col = 1:10)
map('usa', fill= TRUE)
map('usa', fill= TRUE, col=1:10)
map('usa', fill= TRUE, col=1:10)
?map
map('usa', fill= TRUE, col=1:100)
map('usa', fill= TRUE, col=1:100)
map('usa', fill= TRUE, col=1:1)
map('india', fill= TRUE, col=1:1)
map('india', fill= TRUE, col=1:50)
map('usa', fill= TRUE, col=1:50)
map('usa', fill= TRUE, col=1:50000)
map('usa', fill= TRUE, col=5:50000)
plot(iris)
iris
plot(iris)
plot(iris, col=1)
plot(iris, col=1)
plot(iris, col=2)
head(iris, 10)
hist(iris)
hist(nile)
head(nile, 19)
head(Nile, 19)
head(Nile, 10)
Nile
Nile
data()
hist(Orange)
head(Orange, 19)
his(Orange$Tree)
hist(Orange$Tree)
hist(Orange$age)
hist(Orange$circumference)
head(Orange, 19)
hist(Orange$circumference)
library(maps)
library(mapdata)
install.packages("mapdata")
library(mapdata)
map("worldHires", "Usa")
map("worldHires", "Usa", xlim=c(-141,-53), ylim=c(40,85))
map("worldHires", "Usa", xlim=c(-100,-50), ylim=c(40,85))
map("worldHires", "Usa", xlim=c(-75,-50), ylim=c(40,85))
map("worldHires", "Usa", xlim=c(-175,-50), ylim=c(40,85))
map("worldHires", "Usa", xlim=c(-175,-50), ylim=c(50,85))
map("worldHires", "Usa", xlim=c(-175,-50), ylim=c(30,85))
map("worldHires", "Usa", xlim=c(-175,-50), ylim=c(25,85))
map("worldHires", "Inda", xlim=c(-175,-50), ylim=c(25,85))
map("worldHires", "India", xlim=c(-175,-50), ylim=c(25,85))
map("india")
map("Asia")
map("asia")
map
install.packages("swirl")
library(swirl)
swirl()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,1000)
z*2+1000
my_div
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
seq(5,10, by=30)
my_seq <- seq(5,10, by=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq(along(my_seq))
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Wahid")
my_name <- c(my_char, "Wahid")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
1
swirl()
x <- c(44, 5, NA)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
c(foo=11, bar=2,norf = NA)
vect <- c(foo=11, bar=2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 !=7
5 != 7
!5 == 7
FALSE & FLASE
FALSE & FLASE
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != * && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 >4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints<=sample(10)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints < 0)
all(ints > 0)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
z <- c(3,2,10)
class(z)
z
z <- cbind(x,y)
z
class(z)
z
?matrix
is.matrix(z)
?vector
x <- list(2, "a", "b", TRUE)
x[[1]]
z <- x[[1]]
class z
class(z)
x <- 1:4
y <- 2
x+y
x <- c(3,5,1,10,12,6)
x[x<6]
x[x<6] <- 0
x
setwd("~/Developer/datasciencecoursera")
read.csv("hw1_data.csv")
dataset <- read.csv("hw1_data.csv")
names(dataset)
head(dataset, 2)
desc(dataset)
dim(dataset)
summary(dataset)
str(dataset)
tail(dataset, 2)
dataset[[Ozone, 47]]
dataset[Ozone, 47
]
dataset$Ozone[47]
is.NA(dataset$Ozone)
is.na(dataset$Ozone)
is.na(dataset$Ozone) == TRUE
dataset[,2]
dataset[,1:2]
datset[1:2.]
dataset[1:2,]
dataset[152:153,]
swirl()
x <- c(44, NA, NJ)
x <- c(44, NA, NA)
x x< c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z <-rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf-Inf
dataset
dataset$Ozone
is.na(dataset$Ozone)
is.na(dataset$Ozone) == TREU
is.na(dataset$Ozone) == TRUE
sum(is.na(dataset$Ozone))
?meand
?mean
mean(dataset$Ozone, na.rm = T)
mean(dataset$Ozone)
names(dataset)
(dataset$Ozone > 31) & (dataset$Temp > 90)
dataset[(dataset$Ozone > 31) & (dataset$Temp > 90)]
dataset[(dataset$Ozone > 31) & (dataset$Temp > 90),]
Q18 <- dataset[(dataset$Ozone > 31) & (dataset$Temp > 90),]
mean(Q18$Solar.R na.rm = T)
mean(Q18$Solar.R, na.rm = T)
dataset[month[6]]
dataset$month = 6
datset[dataset$month = 6]
datset[dataset$month == 6,]
dataset[dataset$month == 6,]
Q19 <- dataset[dataset$month == 6,]
mean(Q19$Temp)
mean(Q19$Temp, na.rm = T)
Q19 <- dataset[dataset$month = 6,]
Q19 <- dataset[dataset$month = 6,]
Q19 <- dataset[dataset$month == 6,]
Q20 <- dataset[dataset$month == 5,]
max(Q20$Ozone)
?max
max(Q20$Ozone, na.rm = T)
Q20
dataset$month == 5
dataset$month = 5
dataset[dataset$month = 5]
dataset[dataset$month == 5]
dataset
max(dataset$Ozone)
max(dataset$Ozone, na.rm = True)
dataset
dim(dataset)
dataset <- read.csv("hw1_data.csv")
dataset
dataset[dataset$month == 5]
dataset
dataset[dataset$month == 5,]
dataset[dataset$month == 5:
]
rm(dataset)
rm(Q18)
rm(Q19)
rm(Q20)
dataset <- read.csv("hw1_data.csv")
Q19 <- dataset[dataset$month == 5,]
Q19
dataset
Q19 <- dataset[dataset$Month == 5,]
Q19
Q19 <- dataset[dataset$Month == 6,]
mean(Q19$Temp)
Q20 <- dataset[dataset$Month == 5,]
Q20
max(Q20$Ozone)
max(Q20$Ozone, na.rm= T)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags)
cls_vect <- sapply(flags, class)
clas(cls_vect)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply
tapply(falgs$population, flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
swirl()
?smple
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob = c(0.3,0,7), replacement = TRUE)
sample(1:00, c(0,1), replacement=TRUE, prob=c(0.3, 0.7))
sample(1:100, c(0,1), replacement=TRUE, prob=c(0.3, 0.7))
sample(1:100, c(0,1), prob=c(0.3, 0.7))
sample(1:100, c(0,1), prob=c(0.3, 0.7), replace=TRUE)
sample(1:100, c(0,1), replace=TRUE, prob=c(0.3, 0.7))
sample(c(0,1), 1:100, replace=TRUE, prob=c(0.3, 0.7))
sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
fiips2 <- rbinom(100, size=1, prob=0.7)
fiips2 <- rbinom(n=100, size=1, prob=0.7)
flips2 <- rbinom(n=100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1 <- weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- striptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
